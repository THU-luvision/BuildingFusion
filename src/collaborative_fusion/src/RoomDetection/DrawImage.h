#ifndef MATRIX_IMAGE_H
#define MATRIX_IMAGE_H
#include "DCEL.h"
#include "PatchDetection.h"
#include "Clustering.h"

namespace visualization
{
    static cv::Scalar color_tab[] =   
    {
        cv::Scalar(0, 0, 255),
        cv::Scalar(0,255,0),
        cv::Scalar(255,255,0),
        cv::Scalar(255,0,255),
        cv::Scalar(0,255,255),
        cv::Scalar(255,255,255),
        cv::Scalar(255,0,0),
        cv::Scalar(0, 0, 127),
        cv::Scalar(0,127,0),
        cv::Scalar(127,127,0),
        cv::Scalar(127,0,127),
        cv::Scalar(0,127,127),
        cv::Scalar(127,0,0),
        cv::Scalar(255, 255, 127),
        cv::Scalar(255,127,255),
        cv::Scalar(127,127,255),
        cv::Scalar(127,255,127),
        cv::Scalar(255,127,127),
        cv::Scalar(127,255,255),

        cv::Scalar(0, 0, 64),
        cv::Scalar(0,64,0),
        cv::Scalar(64,64,0),
        cv::Scalar(64,0,64),
        cv::Scalar(0,64,64),
        cv::Scalar(64,64,64),
        cv::Scalar(64,0,0),
        cv::Scalar(0, 0, 127),
        cv::Scalar(0,127,0),
        cv::Scalar(127,127,0),
        cv::Scalar(127,0,127),
        cv::Scalar(0,127,127),
        cv::Scalar(127,127,127),
        cv::Scalar(127,0,0),
        cv::Scalar(64, 64, 127),
        cv::Scalar(64,127,64),
        cv::Scalar(127,127,64),
        cv::Scalar(127,64,127),
        cv::Scalar(64,127,127),
        cv::Scalar(127,64,64),

        cv::Scalar(255, 255, 64),
        cv::Scalar(255,64,255),
        cv::Scalar(64,64,255),
        cv::Scalar(64,255,64),
        cv::Scalar(255,64,64),
        cv::Scalar(64,64,64),
        cv::Scalar(64,255,255),
        cv::Scalar(255, 255, 32),
        cv::Scalar(255,32,255),
        cv::Scalar(32,32,255),
        cv::Scalar(32,255,32),
        cv::Scalar(255,32,32),
        cv::Scalar(32,32,32),
        cv::Scalar(32,255,255),
        cv::Scalar(64, 64, 32),
        cv::Scalar(64,32,64),
        cv::Scalar(32,32,64),
        cv::Scalar(32,64,32),
        cv::Scalar(64,32,32),
        cv::Scalar(32,64,64),

        cv::Scalar(0, 0, 16),
        cv::Scalar(0,16,0),
        cv::Scalar(16,16,0),
        cv::Scalar(16,0,16),
        cv::Scalar(0,16,16),
        cv::Scalar(16,16,16),
        cv::Scalar(16,0,0),
        cv::Scalar(0, 0, 127),
        cv::Scalar(0,127,0),
        cv::Scalar(127,127,0),
        cv::Scalar(127,0,127),
        cv::Scalar(0,127,127),
        cv::Scalar(127,0,0),
        cv::Scalar(16, 16, 127),
        cv::Scalar(16,127,16),
        cv::Scalar(127,127,16),
        cv::Scalar(127,16,127),
        cv::Scalar(16,127,127),
        cv::Scalar(127,16,16),

        cv::Scalar(255, 255, 16),
        cv::Scalar(255,16,255),
        cv::Scalar(16,16,255),
        cv::Scalar(16,255,16),
        cv::Scalar(255,16,16),
        cv::Scalar(16,16,16),
        cv::Scalar(16,255,255),
        cv::Scalar(255, 255, 189),
        cv::Scalar(255,32,255),
        cv::Scalar(32,32,255),
        cv::Scalar(32,255,32),
        cv::Scalar(255,32,32),
        cv::Scalar(32,32,32),
        cv::Scalar(32,255,255),
        cv::Scalar(16, 16, 32),
        cv::Scalar(16,32,16),
        cv::Scalar(32,32,16),
        cv::Scalar(32,16,32),
        cv::Scalar(16,32,32),
        cv::Scalar(32,16,16),

        cv::Scalar(72, 72, 98),
        cv::Scalar(72,98,72),
        cv::Scalar(98,98,72),
        cv::Scalar(98,72,98),
        cv::Scalar(72,98,98),
        cv::Scalar(98,98,98),
        cv::Scalar(98,72,72),
        cv::Scalar(72, 72, 164),
        cv::Scalar(72,164,72),
        cv::Scalar(164,164,72),
        cv::Scalar(164,72,164),
        cv::Scalar(72,164,164),
        cv::Scalar(164,164,164),
        cv::Scalar(164,72,72),
        cv::Scalar(98, 98, 164),
        cv::Scalar(98,164,98),
        cv::Scalar(164,164,98),
        cv::Scalar(164,98,164),
        cv::Scalar(98,164,164),
        cv::Scalar(164,98,98),

        cv::Scalar(72, 72, 64),
        cv::Scalar(72,64,72),
        cv::Scalar(64,64,72),
        cv::Scalar(64,72,64),
        cv::Scalar(72,64,64),
        cv::Scalar(64,64,64),
        cv::Scalar(64,72,72),
        cv::Scalar(72, 72, 164),
        cv::Scalar(72,164,72),
        cv::Scalar(164,164,72),
        cv::Scalar(164,72,164),
        cv::Scalar(72,164,164),
        cv::Scalar(164,164,164),
        cv::Scalar(164,72,72),
        cv::Scalar(64, 64, 164),
        cv::Scalar(64,164,64),
        cv::Scalar(164,164,64),
        cv::Scalar(164,64,164),
        cv::Scalar(64,164,164),
        cv::Scalar(164,64,64),

        cv::Scalar(98, 98, 64),
        cv::Scalar(98,64,98),
        cv::Scalar(64,64,98),
        cv::Scalar(64,98,64),
        cv::Scalar(98,64,64),
        cv::Scalar(64,64,64),
        cv::Scalar(64,98,98),
        cv::Scalar(98, 98, 6),
        cv::Scalar(98,6,98),
        cv::Scalar(6,6,98),
        cv::Scalar(6,98,6),
        cv::Scalar(98,6,6),
        cv::Scalar(6,6,6),
        cv::Scalar(6,98,98),
        cv::Scalar(64, 64, 6),
        cv::Scalar(64,6,64),
        cv::Scalar(6,6,64),
        cv::Scalar(6,64,6),
        cv::Scalar(64,6,6),
        cv::Scalar(6,64,64),

        cv::Scalar(72, 72, 16),
        cv::Scalar(72,16,72),
        cv::Scalar(16,16,72),
        cv::Scalar(16,72,16),
        cv::Scalar(72,16,16),
        cv::Scalar(16,16,16),
        cv::Scalar(16,72,72),
        cv::Scalar(72, 72, 164),
        cv::Scalar(72,164,72),
        cv::Scalar(164,164,72),
        cv::Scalar(164,72,164),
        cv::Scalar(72,164,164),
        cv::Scalar(164,164,164),
        cv::Scalar(164,72,72),
        cv::Scalar(16, 16, 164),
        cv::Scalar(16,164,16),
        cv::Scalar(164,164,16),
        cv::Scalar(164,16,164),
        cv::Scalar(16,164,164),
        cv::Scalar(164,16,16),

        cv::Scalar(98, 98, 16),
        cv::Scalar(98,16,98),
        cv::Scalar(16,16,98),
        cv::Scalar(16,98,16),
        cv::Scalar(98,16,16),
        cv::Scalar(16,16,16),
        cv::Scalar(16,98,98),
        cv::Scalar(98, 98, 6),
        cv::Scalar(98,6,98),
        cv::Scalar(6,6,98),
        cv::Scalar(6,98,6),
        cv::Scalar(98,6,6),
        cv::Scalar(6,6,6),
        cv::Scalar(6,98,98),
        cv::Scalar(16, 16, 6),
        cv::Scalar(16,6,16),
        cv::Scalar(6,6,16),
        cv::Scalar(6,16,6),
        cv::Scalar(16,6,6),
        cv::Scalar(6,16,16),
    
            cv::Scalar(8, 8, 76),
        cv::Scalar(8,76,8),
        cv::Scalar(76,76,8),
        cv::Scalar(76,8,76),
        cv::Scalar(8,76,76),
        cv::Scalar(76,76,76),
        cv::Scalar(76,8,8),
        cv::Scalar(8, 8, 127),
        cv::Scalar(8,127,8),
        cv::Scalar(127,127,8),
        cv::Scalar(127,8,127),
        cv::Scalar(8,127,127),
        cv::Scalar(127,8,8),
        cv::Scalar(76, 76, 127),
        cv::Scalar(76,127,76),
        cv::Scalar(127,127,76),
        cv::Scalar(127,76,127),
        cv::Scalar(76,127,127),
        cv::Scalar(127,76,76),

        cv::Scalar(8, 8, 64),
        cv::Scalar(8,64,8),
        cv::Scalar(64,64,8),
        cv::Scalar(64,8,64),
        cv::Scalar(8,64,64),
        cv::Scalar(64,64,64),
        cv::Scalar(64,8,8),
        cv::Scalar(8, 8, 127),
        cv::Scalar(8,127,8),
        cv::Scalar(127,127,8),
        cv::Scalar(127,8,127),
        cv::Scalar(8,127,127),
        cv::Scalar(127,8,8),
        cv::Scalar(64, 64, 127),
        cv::Scalar(64,127,64),
        cv::Scalar(127,127,64),
        cv::Scalar(127,64,127),
        cv::Scalar(64,127,127),
        cv::Scalar(127,64,64),

        cv::Scalar(76, 76, 64),
        cv::Scalar(76,64,76),
        cv::Scalar(64,64,76),
        cv::Scalar(64,76,64),
        cv::Scalar(76,64,64),
        cv::Scalar(64,64,64),
        cv::Scalar(64,76,76),
        cv::Scalar(76, 76, 58),
        cv::Scalar(76,58,76),
        cv::Scalar(58,58,76),
        cv::Scalar(58,76,58),
        cv::Scalar(76,58,58),
        cv::Scalar(58,58,58),
        cv::Scalar(58,76,76),
        cv::Scalar(64, 64, 58),
        cv::Scalar(64,58,64),
        cv::Scalar(58,58,64),
        cv::Scalar(58,64,58),
        cv::Scalar(64,58,58),
        cv::Scalar(58,64,64),

        cv::Scalar(8, 8, 160),
        cv::Scalar(8,160,8),
        cv::Scalar(160,160,8),
        cv::Scalar(160,8,160),
        cv::Scalar(8,160,160),
        cv::Scalar(160,160,160),
        cv::Scalar(160,8,8),
        cv::Scalar(8, 8, 127),
        cv::Scalar(8,127,8),
        cv::Scalar(127,127,8),
        cv::Scalar(127,8,127),
        cv::Scalar(8,127,127),
        cv::Scalar(127,8,8),
        cv::Scalar(160, 160, 127),
        cv::Scalar(160,127,160),
        cv::Scalar(127,127,160),
        cv::Scalar(127,160,127),
        cv::Scalar(160,127,127),
        cv::Scalar(127,160,160),

        cv::Scalar(76, 76, 160),
        cv::Scalar(76,160,76),
        cv::Scalar(160,160,76),
        cv::Scalar(160,76,160),
        cv::Scalar(76,160,160),
        cv::Scalar(160,160,160),
        cv::Scalar(160,76,76),
        cv::Scalar(76, 76, 58),
        cv::Scalar(76,58,76),
        cv::Scalar(58,58,76),
        cv::Scalar(58,76,58),
        cv::Scalar(76,58,58),
        cv::Scalar(58,58,58),
        cv::Scalar(58,76,76),
        cv::Scalar(160, 160, 58),
        cv::Scalar(160,58,160),
        cv::Scalar(58,58,160),
        cv::Scalar(58,160,58),
        cv::Scalar(160,58,58),
        cv::Scalar(58,160,160)
    };

    cv::Mat MatrixImage(const Eigen::MatrixXf &m);
    cv::Mat PatchImage(const std::vector<LinePatch> &patches, const Point2f &pos = Point2f());
    cv::Mat PatchImage(const std::vector<PlanePatch> &patches, const Point2f &pos = Point2f());
    cv::Mat ClusterImage(const std::vector<Cluster<2>> &clusters);
    cv::Mat DCELImage(const DCEL & dcel, const Point2f &pos, const Point3fList &points);
}
#endif